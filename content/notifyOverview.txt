AccountManager
===========

	tbSync.sync is used 2x, 
		- deleteAccount: "disconnectAccount"
		- updateAccountSyncStateObserver: "tbSync.sync.currentProzess" (

	"tbsync.changedSyncstate": tbSyncAccountManager.updateAccountSyncStateObserver
		if aData =="" use updateAccountStatus(tbSync.sync.currentProzess.account) on "syncing" and "accountdone"
		else  updateAccountStatus(aData)

	"tbsync.changedAccountName" : tbSyncAccountManager.updateAccountNameObserver
		aData contains id + name
		tbSyncAccountManager.updateAccountName (id, name);




Messenger
========

	tbSync.sync is used 3x, 
		- syncTimer: "tbSync.sync.addAccountToSyncQueue"
		- setpassord: "tbSync.sync.addAccountToSyncQueue"
		- syncstateObserver: "tbSync.sync.currentProzess"

	"tbsync.changedSyncstate" : tbSyncMessenger.syncstateObserver
		update status bar only, if aData = "" (a notification send by setSyncState using tbSync.sync.currentProzess .accounts, .folderId and .state)

	"tbsync.setPassword" : tbSyncMessenger.setPasswordObserver
		tbSync.setPassword(account, newpassword);
		tbSync.db.setAccountSetting(account, "state", "connecting");
		tbSync.sync.addAccountToSyncQueue("resync", account);
		--> NOTIFY tbsync.updateAccountSettingsGui (account)



AccountSettings
===========

        "tbsync.changedSyncstate" : tbSyncAccountSettings.syncstateObserver
            //the notification could be send by setSyncState (aData = "") or by tzMessenger (aData = account)
            let account = (aData == "") ? tbSync.sync.currentProzess.account : aData;

            //only handle syncstate changes of the active account
            if (account == tbSyncAccountSettings.selectedAccount) {
                
                if (aData == "" && tbSync.sync.currentProzess.state == "accountdone") {
			//Error handling at end of syncprocess  initiated by setSyncState
                } else { 
                        //handle all other syncstate changes (either manuel ones aData="account" or send setSyncState (aData = "") for the currentProcess
                        //in either case, the notification is for THIS account
                        tbSyncAccountSettings.updateSyncstate();
                        tbSyncAccountSettings.updateFolderList();
                }
            }

	    
        "tbsync.updateAccountSettingsGui" : tbSyncAccountSettings.updateGuiObserver
            //only update gui if request is for this account
            if (aData == tbSyncAccountSettings.selectedAccount) {
                tbSyncAccountSettings.updateGui();
            }

